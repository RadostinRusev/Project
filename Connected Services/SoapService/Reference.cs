//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProjMVC.SoapService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/WcfSOAP2")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SoapService.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        ProjMVC.SoapService.CompositeType GetDataUsingDataContract(ProjMVC.SoapService.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<ProjMVC.SoapService.CompositeType> GetDataUsingDataContractAsync(ProjMVC.SoapService.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUser", ReplyAction="http://tempuri.org/IService1/GetUserResponse")]
        AppsService.DTOs.UserDTO[] GetUser();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUser", ReplyAction="http://tempuri.org/IService1/GetUserResponse")]
        System.Threading.Tasks.Task<AppsService.DTOs.UserDTO[]> GetUserAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUsertById", ReplyAction="http://tempuri.org/IService1/GetUsertByIdResponse")]
        AppsService.DTOs.UserDTO GetUsertById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUsertById", ReplyAction="http://tempuri.org/IService1/GetUsertByIdResponse")]
        System.Threading.Tasks.Task<AppsService.DTOs.UserDTO> GetUsertByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Edit", ReplyAction="http://tempuri.org/IService1/EditResponse")]
        string Edit(int id, AppsService.DTOs.UserDTO userDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Edit", ReplyAction="http://tempuri.org/IService1/EditResponse")]
        System.Threading.Tasks.Task<string> EditAsync(int id, AppsService.DTOs.UserDTO userDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditSong", ReplyAction="http://tempuri.org/IService1/EditSongResponse")]
        string EditSong(int id, AppsService.DTOs.SongDTO songDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditSong", ReplyAction="http://tempuri.org/IService1/EditSongResponse")]
        System.Threading.Tasks.Task<string> EditSongAsync(int id, AppsService.DTOs.SongDTO songDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditPlaylist", ReplyAction="http://tempuri.org/IService1/EditPlaylistResponse")]
        string EditPlaylist(int id, AppsService.DTOs.PlayListDTO playListDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditPlaylist", ReplyAction="http://tempuri.org/IService1/EditPlaylistResponse")]
        System.Threading.Tasks.Task<string> EditPlaylistAsync(int id, AppsService.DTOs.PlayListDTO playListDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostUser", ReplyAction="http://tempuri.org/IService1/PostUserResponse")]
        string PostUser(AppsService.DTOs.UserDTO userDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostUser", ReplyAction="http://tempuri.org/IService1/PostUserResponse")]
        System.Threading.Tasks.Task<string> PostUserAsync(AppsService.DTOs.UserDTO userDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteUser", ReplyAction="http://tempuri.org/IService1/DeleteUserResponse")]
        string DeleteUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteUser", ReplyAction="http://tempuri.org/IService1/DeleteUserResponse")]
        System.Threading.Tasks.Task<string> DeleteUserAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSPlayList", ReplyAction="http://tempuri.org/IService1/GetSPlayListResponse")]
        AppsService.DTOs.PlayListDTO[] GetSPlayList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSPlayList", ReplyAction="http://tempuri.org/IService1/GetSPlayListResponse")]
        System.Threading.Tasks.Task<AppsService.DTOs.PlayListDTO[]> GetSPlayListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPlaylistById", ReplyAction="http://tempuri.org/IService1/GetPlaylistByIdResponse")]
        AppsService.DTOs.PlayListDTO GetPlaylistById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPlaylistById", ReplyAction="http://tempuri.org/IService1/GetPlaylistByIdResponse")]
        System.Threading.Tasks.Task<AppsService.DTOs.PlayListDTO> GetPlaylistByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostPlayList", ReplyAction="http://tempuri.org/IService1/PostPlayListResponse")]
        string PostPlayList(AppsService.DTOs.PlayListDTO playListDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostPlayList", ReplyAction="http://tempuri.org/IService1/PostPlayListResponse")]
        System.Threading.Tasks.Task<string> PostPlayListAsync(AppsService.DTOs.PlayListDTO playListDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeletePlayList", ReplyAction="http://tempuri.org/IService1/DeletePlayListResponse")]
        string DeletePlayList(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeletePlayList", ReplyAction="http://tempuri.org/IService1/DeletePlayListResponse")]
        System.Threading.Tasks.Task<string> DeletePlayListAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSSongist", ReplyAction="http://tempuri.org/IService1/GetSSongistResponse")]
        AppsService.DTOs.SongDTO[] GetSSongist();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSSongist", ReplyAction="http://tempuri.org/IService1/GetSSongistResponse")]
        System.Threading.Tasks.Task<AppsService.DTOs.SongDTO[]> GetSSongistAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSongById", ReplyAction="http://tempuri.org/IService1/GetSongByIdResponse")]
        AppsService.DTOs.SongDTO GetSongById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSongById", ReplyAction="http://tempuri.org/IService1/GetSongByIdResponse")]
        System.Threading.Tasks.Task<AppsService.DTOs.SongDTO> GetSongByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostSong", ReplyAction="http://tempuri.org/IService1/PostSongResponse")]
        string PostSong(AppsService.DTOs.SongDTO songDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostSong", ReplyAction="http://tempuri.org/IService1/PostSongResponse")]
        System.Threading.Tasks.Task<string> PostSongAsync(AppsService.DTOs.SongDTO songDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteSong", ReplyAction="http://tempuri.org/IService1/DeleteSongResponse")]
        string DeleteSong(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteSong", ReplyAction="http://tempuri.org/IService1/DeleteSongResponse")]
        System.Threading.Tasks.Task<string> DeleteSongAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : ProjMVC.SoapService.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<ProjMVC.SoapService.IService1>, ProjMVC.SoapService.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public ProjMVC.SoapService.CompositeType GetDataUsingDataContract(ProjMVC.SoapService.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<ProjMVC.SoapService.CompositeType> GetDataUsingDataContractAsync(ProjMVC.SoapService.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public AppsService.DTOs.UserDTO[] GetUser() {
            return base.Channel.GetUser();
        }
        
        public System.Threading.Tasks.Task<AppsService.DTOs.UserDTO[]> GetUserAsync() {
            return base.Channel.GetUserAsync();
        }
        
        public AppsService.DTOs.UserDTO GetUsertById(int id) {
            return base.Channel.GetUsertById(id);
        }
        
        public System.Threading.Tasks.Task<AppsService.DTOs.UserDTO> GetUsertByIdAsync(int id) {
            return base.Channel.GetUsertByIdAsync(id);
        }
        
        public string Edit(int id, AppsService.DTOs.UserDTO userDTO) {
            return base.Channel.Edit(id, userDTO);
        }
        
        public System.Threading.Tasks.Task<string> EditAsync(int id, AppsService.DTOs.UserDTO userDTO) {
            return base.Channel.EditAsync(id, userDTO);
        }
        
        public string EditSong(int id, AppsService.DTOs.SongDTO songDTO) {
            return base.Channel.EditSong(id, songDTO);
        }
        
        public System.Threading.Tasks.Task<string> EditSongAsync(int id, AppsService.DTOs.SongDTO songDTO) {
            return base.Channel.EditSongAsync(id, songDTO);
        }
        
        public string EditPlaylist(int id, AppsService.DTOs.PlayListDTO playListDTO) {
            return base.Channel.EditPlaylist(id, playListDTO);
        }
        
        public System.Threading.Tasks.Task<string> EditPlaylistAsync(int id, AppsService.DTOs.PlayListDTO playListDTO) {
            return base.Channel.EditPlaylistAsync(id, playListDTO);
        }
        
        public string PostUser(AppsService.DTOs.UserDTO userDTO) {
            return base.Channel.PostUser(userDTO);
        }
        
        public System.Threading.Tasks.Task<string> PostUserAsync(AppsService.DTOs.UserDTO userDTO) {
            return base.Channel.PostUserAsync(userDTO);
        }
        
        public string DeleteUser(int id) {
            return base.Channel.DeleteUser(id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteUserAsync(int id) {
            return base.Channel.DeleteUserAsync(id);
        }
        
        public AppsService.DTOs.PlayListDTO[] GetSPlayList() {
            return base.Channel.GetSPlayList();
        }
        
        public System.Threading.Tasks.Task<AppsService.DTOs.PlayListDTO[]> GetSPlayListAsync() {
            return base.Channel.GetSPlayListAsync();
        }
        
        public AppsService.DTOs.PlayListDTO GetPlaylistById(int id) {
            return base.Channel.GetPlaylistById(id);
        }
        
        public System.Threading.Tasks.Task<AppsService.DTOs.PlayListDTO> GetPlaylistByIdAsync(int id) {
            return base.Channel.GetPlaylistByIdAsync(id);
        }
        
        public string PostPlayList(AppsService.DTOs.PlayListDTO playListDTO) {
            return base.Channel.PostPlayList(playListDTO);
        }
        
        public System.Threading.Tasks.Task<string> PostPlayListAsync(AppsService.DTOs.PlayListDTO playListDTO) {
            return base.Channel.PostPlayListAsync(playListDTO);
        }
        
        public string DeletePlayList(int id) {
            return base.Channel.DeletePlayList(id);
        }
        
        public System.Threading.Tasks.Task<string> DeletePlayListAsync(int id) {
            return base.Channel.DeletePlayListAsync(id);
        }
        
        public AppsService.DTOs.SongDTO[] GetSSongist() {
            return base.Channel.GetSSongist();
        }
        
        public System.Threading.Tasks.Task<AppsService.DTOs.SongDTO[]> GetSSongistAsync() {
            return base.Channel.GetSSongistAsync();
        }
        
        public AppsService.DTOs.SongDTO GetSongById(int id) {
            return base.Channel.GetSongById(id);
        }
        
        public System.Threading.Tasks.Task<AppsService.DTOs.SongDTO> GetSongByIdAsync(int id) {
            return base.Channel.GetSongByIdAsync(id);
        }
        
        public string PostSong(AppsService.DTOs.SongDTO songDTO) {
            return base.Channel.PostSong(songDTO);
        }
        
        public System.Threading.Tasks.Task<string> PostSongAsync(AppsService.DTOs.SongDTO songDTO) {
            return base.Channel.PostSongAsync(songDTO);
        }
        
        public string DeleteSong(int id) {
            return base.Channel.DeleteSong(id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteSongAsync(int id) {
            return base.Channel.DeleteSongAsync(id);
        }
    }
}
